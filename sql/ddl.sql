DROP TABLE IF EXISTS MEMBER CASCADE;
CREATE TABLE MEMBER
(
    MEMBER_ID             BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    LOGIN_ID              VARCHAR(20)  NOT NULL,
    PASSWORD              VARCHAR(100) NOT NULL,
    NAME                  VARCHAR(12)  NOT NULL,
    PHONE_NUMBER          VARCHAR(13)  NOT NULL,
    EMAIL                 VARCHAR(45)  NOT NULL,
    GRADE                 VARCHAR(10)  NOT NULL,
    AUTHORITY             VARCHAR(30)  NOT NULL,
    AGREE_TO_RECEIVE_SMS  VARCHAR(10)  NOT NULL,
    AGREE_TO_RECEIVE_MAIL VARCHAR(10)  NOT NULL,
    IS_EMAIL_VERIFIED     VARCHAR(10)  NOT NULL,
    CREATED_AT            TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT           TIMESTAMP,
    PRIMARY KEY (MEMBER_ID),
    UNIQUE KEY MEMBER_LOGIN_ID_UNIQUE(LOGIN_ID),
    UNIQUE KEY MEMBER_PHONE_NUMBER_UNIQUE(PHONE_NUMBER),
    UNIQUE KEY MEMBER_EMAIL_UNIQUE (EMAIL)
);

DROP TABLE IF EXISTS DELIVERY CASCADE;
CREATE TABLE DELIVERY
(
    DELIVERY_ID         BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    MEMBER_ID           BIGINT UNSIGNED NOT NULL,
    DELIVERY_NAME       VARCHAR(50) NOT NULL,
    RECIPIENT_NAME      VARCHAR(12) NOT NULL,
    ZIP_CODE            VARCHAR(5)  NOT NULL,
    BASIC_ADDRESS       VARCHAR(40) NOT NULL,
    DETAIL_ADDRESS      VARCHAR(40),
    PHONE_NUMBER        VARCHAR(13) NOT NULL,
    IS_DEFAULT_DELIVERY VARCHAR(10) NOT NULL,
    CREATED_AT          TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT         TIMESTAMP,
    PRIMARY KEY (DELIVERY_ID)
);

ALTER TABLE DELIVERY
    ADD CONSTRAINT FK_DELIVERY_MEMBER_ID
        FOREIGN KEY (MEMBER_ID)
            REFERENCES MEMBER (MEMBER_ID);

DROP TABLE IF EXISTS DISCOUNT CASCADE;
CREATE TABLE DISCOUNT
(
    DISCOUNT_ID        BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    NAME               VARCHAR(50) NOT NULL,
    DISCOUNT_PERCENT   INT UNSIGNED NOT NULL,
    START_DATETIME     TIMESTAMP   NOT NULL,
    END_DATETIME       TIMESTAMP   NOT NULL,
    IS_DOUBLE_DISCOUNT VARCHAR(10) NOT NULL,
    PRIMARY KEY (DISCOUNT_ID)
);

DROP TABLE IF EXISTS PRODUCT CASCADE;
CREATE TABLE PRODUCT
(
    PRODUCT_ID     BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    NAME           VARCHAR(50) NOT NULL,
    CATEGORY       VARCHAR(20) NOT NULL,
    PRICE          INT UNSIGNED NOT NULL,
    DISCOUNT_ID    BIGINT UNSIGNED,
    STOCK_QUANTITY INT UNSIGNED NOT NULL,
    DETAILS        CLOB        NOT NULL,
    SIZE_GUIDE     CLOB        NOT NULL,
    SHIPPING       CLOB        NOT NULL,
    NOTICE         CLOB        NOT NULL,
    CREATED_AT     TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT    TIMESTAMP,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE KEY PRODUCT_NAME_UNIQUE (NAME)
);

ALTER TABLE PRODUCT
    ADD CONSTRAINT FK_PRODUCT_DISCOUNT_ID
        FOREIGN KEY (DISCOUNT_ID)
            REFERENCES DISCOUNT (DISCOUNT_ID);

DROP TABLE IF EXISTS PRODUCT_IMAGE CASCADE;
CREATE TABLE PRODUCT_IMAGE
(
    PRODUCT_IMAGE_ID  BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    UPLOAD_IMAGE_NAME VARCHAR(255) NOT NULL,
    STORE_IMAGE_NAME  VARCHAR(255) NOT NULL,
    IMAGE_TYPE        VARCHAR(10)  NOT NULL,
    CREATED_AT        TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT       TIMESTAMP,
    PRODUCT_ID        BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (PRODUCT_IMAGE_ID)
);

ALTER TABLE PRODUCT_IMAGE
    ADD CONSTRAINT FK_PRODUCT_IMAGE_PRODUCT_ID
        FOREIGN KEY (PRODUCT_ID)
            REFERENCES PRODUCT (PRODUCT_ID);

DROP TABLE IF EXISTS BOARD CASCADE;
CREATE TABLE BOARD
(
    BOARD_ID    BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    MEMBER_ID   BIGINT UNSIGNED NOT NULL,
    PRODUCT_ID  BIGINT UNSIGNED,
    TITLE       VARCHAR(50) NOT NULL,
    CONTENT     CLOB        NOT NULL,
    HIT         INT UNSIGNED NOT NULL DEFAULT 0,
    BOARD_TYPE  VARCHAR(10) NOT NULL,
    IS_SECRET   VARCHAR(10),
    RATING      INT UNSIGNED,
    CREATED_AT  TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT TIMESTAMP,
    PRIMARY KEY (BOARD_ID)
);

ALTER TABLE BOARD
    ADD CONSTRAINT FK_BOARD_MEMBER_ID
        FOREIGN KEY (MEMBER_ID)
            REFERENCES MEMBER (MEMBER_ID);

ALTER TABLE BOARD
    ADD CONSTRAINT FK_BOARD_PRODUCT_ID
        FOREIGN KEY (PRODUCT_ID)
            REFERENCES PRODUCT (PRODUCT_ID);

DROP TABLE IF EXISTS BOARD_IMAGE CASCADE;
CREATE TABLE BOARD_IMAGE
(
    BOARD_IMAGE_ID    BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    BOARD_ID          BIGINT UNSIGNED NOT NULL,
    UPLOAD_IMAGE_NAME VARCHAR   NOT NULL,
    STORE_IMAGE_NAME  VARCHAR   NOT NULL,
    CREATED_AT        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT       TIMESTAMP,
    PRIMARY KEY (BOARD_IMAGE_ID)
);

ALTER TABLE BOARD_IMAGE
    ADD CONSTRAINT FK_BOARD_IMAGE_BOARD_ID
        FOREIGN KEY (BOARD_ID)
            REFERENCES BOARD (BOARD_ID);


DROP TABLE IF EXISTS WISH CASCADE;
CREATE TABLE WISH
(
    WISH_ID    BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    MEMBER_ID  BIGINT UNSIGNED NOT NULL,
    PRODUCT_ID BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (WISH_ID)
);

ALTER TABLE WISH
    ADD CONSTRAINT FK_WISH_MEMBER_ID
        FOREIGN KEY (MEMBER_ID)
            REFERENCES MEMBER (MEMBER_ID);

ALTER TABLE WISH
    ADD CONSTRAINT FK_WISH_PRODUCT_ID
        FOREIGN KEY (PRODUCT_ID)
            REFERENCES PRODUCT (PRODUCT_ID);

DROP TABLE IF EXISTS ADMIN CASCADE;
CREATE TABLE ADMIN
(
    ADMIN_ID  INT UNSIGNED NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    LOGIN_ID  VARCHAR(20)  NOT NULL,
    PASSWORD  VARCHAR(100) NOT NULL,
    NAME      VARCHAR(3)   NOT NULL DEFAULT '관리자',
    EMAIL     VARCHAR(45)  NOT NULL,
    AUTHORITY VARCHAR(30)  NOT NULL,
    PRIMARY KEY (ADMIN_ID),
    UNIQUE KEY ADMIN_LOGIN_ID_UNIQUE (LOGIN_ID);
);

DROP TABLE IF EXISTS CART CASCADE;
CREATE TABLE CART
(
    CART_ID    BIGINT UNSIGNED NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    MEMBER_ID  BIGINT UNSIGNED NOT NULL,
    PRODUCT_ID BIGINT UNSIGNED NOT NULL,
    COUNT      INT UNSIGNED NOT NULL,
    PRIMARY KEY (CART_ID)
);
ALTER TABLE CART
    ADD CONSTRAINT FK_CART_MEMBER_ID
        FOREIGN KEY (MEMBER_ID)
            REFERENCES MEMBER (MEMBER_ID);

ALTER TABLE CART
    ADD CONSTRAINT FK_CART_PRODUCT_ID
        FOREIGN KEY (PRODUCT_ID)
            REFERENCES PRODUCT (PRODUCT_ID);

DROP TABLE IF EXISTS ORDERS CASCADE;
CREATE TABLE ORDERS
(
    ORDER_ID              BIGINT UNSIGNED NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    RECIPIENT_NAME        VARCHAR(30),
    RECIPIENT_PHONENUMBER VARCHAR(13),
    SHIPPING_ADDRESS      VARCHAR(100),
    MERCHANT_UID          VARCHAR     NOT NULL,
    ORDER_AT              TIMESTAMP   NOT NULL,
    ORDER_STATUS          VARCHAR(10) NOT NULL,
    MEMBER_ID             BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (ORDER_ID)
);

ALTER TABLE ORDERS
    ADD CONSTRAINT FK_ORDERS_MEMBER_ID
        FOREIGN KEY (MEMBER_ID)
            REFERENCES MEMBER (MEMBER_ID);

DROP TABLE IF EXISTS ORDER_PRODUCT CASCADE;
CREATE TABLE ORDER_PRODUCT
(
    ORDER_PRODUCT_ID BIGINT UNSIGNED NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    COUNT            INT NOT NULL,
    PRODUCT_ID       BIGINT UNSIGNED NOT NULL,
    ORDER_ID         BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (ORDER_PRODUCT_ID)
);

ALTER TABLE ORDER_PRODUCT
    ADD CONSTRAINT FK_ORDER_PRODUCT_PRODUCT_ID
        FOREIGN KEY (PRODUCT_ID)
            REFERENCES PRODUCT (PRODUCT_ID);

ALTER TABLE ORDER_PRODUCT
    ADD CONSTRAINT FK_ORDER_PRODUCT_ORDER_ID
        FOREIGN KEY (ORDER_ID)
            REFERENCES ORDERS (ORDER_ID);

-- 관리자
DROP TABLE IF EXISTS admin CASCADE;
CREATE TABLE admin
(
    admin_id      BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    login_id      VARCHAR(20)  NOT NULL,
    password      VARCHAR(100) NOT NULL,
    name          VARCHAR(5)   NOT NULL,
    email         VARCHAR(45)  NOT NULL,
    is_authorized TINYINT      NOT NULL,
    authority     ENUM('ROLE_ANONYMOUS', 'ROLE_ADMIN') NOT NULL,
    created_at    TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modified_at   TIMESTAMP,
    CONSTRAINT ADMIN_UNIQUE_LOGIN_ID UNIQUE (login_id),
    CONSTRAINT ADMIN_UNIQUE_EMAIL UNIQUE (email)
);

-- 공지사항
DROP TABLE IF EXISTS NOTICE CASCADE;
CREATE TABLE NOTICE
(
    NOTICE_ID   BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    ADMIN_ID    BIGINT UNSIGNED NOT NULL,
    TITLE       VARCHAR(50)   NOT NULL,
    CONTENT     VARCHAR(2000) NOT NULL,
    HIT         INT UNSIGNED NOT NULL DEFAULT 0,
    CREATED_AT  TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT TIMESTAMP
);

-- 상품
DROP TABLE IF EXISTS PRODUCT CASCADE;
CREATE TABLE PRODUCT
(
    PRODUCT_ID     BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    DISCOUNT_ID    BIGINT UNSIGNED,
    NAME           VARCHAR(50)   NOT NULL,
    CATEGORY       ENUM('OCEAN', 'CAFE', 'SUNSET') NOT NULL,
    PRICE          INT UNSIGNED NOT NULL,
    STOCK_QUANTITY INT UNSIGNED NOT NULL,
    DETAILS        VARCHAR(1000) NOT NULL,
    SIZE_GUIDE     VARCHAR(1000) NOT NULL,
    SHIPPING       VARCHAR(1000) NOT NULL,
    NOTICE         VARCHAR(1000) NOT NULL,
    CREATED_AT     TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT    TIMESTAMP,
    UNIQUE KEY PRODUCT_NAME_UNIQUE (NAME)
);

-- 상품 이미지
DROP TABLE IF EXISTS PRODUCT_IMAGE CASCADE;
CREATE TABLE PRODUCT_IMAGE
(
    PRODUCT_IMAGE_ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    PRODUCT_ID       BIGINT UNSIGNED NOT NULL,
    IMAGE_URL        VARCHAR(255) NOT NULL,
    IMAGE_TYPE       ENUM('DISPLAY', 'HOVER', 'DETAILS') NOT NULL
);

-- 상품 할인
DROP TABLE IF EXISTS discount CASCADE;
CREATE TABLE discount
(
    discount_id      BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name             VARCHAR(50) NOT NULL,
    discount_percent INT UNSIGNED NOT NULL,
    started_at       TIMESTAMP   NOT NULL,
    expired_at       TIMESTAMP   NOT NULL,
    CONSTRAINT DISCOUNT_UNIQUE_NAME UNIQUE (name)
);

-- 회원
DROP TABLE IF EXISTS MEMBER CASCADE;
CREATE TABLE MEMBER
(
    MEMBER_ID             BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    MEMBERSHIP_ID         TINYINT UNSIGNED NOT NULL,
    LOGIN_ID              VARCHAR(20)  NOT NULL,
    PASSWORD              VARCHAR(100) NOT NULL,
    NAME                  VARCHAR(12)  NOT NULL,
    PHONE_NUMBER          VARCHAR(13)  NOT NULL,
    EMAIL                 VARCHAR(45)  NOT NULL,
    AUTHORITY             ENUM('ROLE_ANONYMOUS', 'ROLE_USER', 'ROLE_ADMIN') NOT NULL,
    AGREE_TO_RECEIVE_SMS  TINYINT(1) NOT NULL,
    AGREE_TO_RECEIVE_MAIL TINYINT(1) NOT NULL,
    IS_EMAIL_VERIFIED     TINYINT(1) NOT NULL,
    CREATED_AT            TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT           TIMESTAMP,
    UNIQUE KEY MEMBER_LOGIN_ID_UNIQUE(LOGIN_ID),
    UNIQUE KEY MEMBER_PHONE_NUMBER_UNIQUE(PHONE_NUMBER),
    UNIQUE KEY MEMBER_EMAIL_UNIQUE(EMAIL)
);

-- 회원 등급
DROP TABLE IF EXISTS MEMBERSHIP CASCADE;
CREATE TABLE MEMBERSHIP
(
    MEMBERSHIP_ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    LEVEL         VARCHAR(30) NOT NULL,
    POINT_RATE    DECIMAL     NOT NULL
);

-- 배송지
DROP TABLE IF EXISTS DELIVERY CASCADE;
CREATE TABLE DELIVERY
(
    DELIVERY_ID         BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    MEMBER_ID           BIGINT UNSIGNED NOT NULL,
    DELIVERY_NAME       VARCHAR(50) NOT NULL,
    RECIPIENT_NAME      VARCHAR(12) NOT NULL,
    ZIP_CODE            VARCHAR(5)  NOT NULL,
    BASIC_ADDRESS       VARCHAR(40) NOT NULL,
    DETAIL_ADDRESS      VARCHAR(40),
    PHONE_NUMBER        VARCHAR(13) NOT NULL,
    IS_DEFAULT_DELIVERY TINYINT(1) NOT NULL,
    CREATED_AT          TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT         TIMESTAMP
);

-- 적립되는 적립금
DROP TABLE IF EXISTS SAVED_POINT CASCADE;
CREATE TABLE SAVED_POINT
(
    SAVED_POINT_ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    MEMBER_ID      BIGINT UNSIGNED NOT NULL,
    AMOUNT         INT UNSIGNED NOT NULL,
    BALANCE        INT UNSIGNED NOT NULL,
    TYPE           VARCHAR(10) NOT NULL,
    CREATED_AT     TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    EXPIRED_AT     TIMESTAMP   NOT NULL
);



DROP TABLE IF EXISTS BOARD CASCADE;
CREATE TABLE BOARD
(
    BOARD_ID    BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    MEMBER_ID   BIGINT UNSIGNED NOT NULL,
    PRODUCT_ID  BIGINT UNSIGNED,
    TITLE       VARCHAR(50) NOT NULL,
    CONTENT     CLOB        NOT NULL,
    HIT         INT UNSIGNED NOT NULL DEFAULT 0,
    BOARD_TYPE  VARCHAR(10) NOT NULL,
    IS_SECRET   VARCHAR(10),
    RATING      INT UNSIGNED,
    CREATED_AT  TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT TIMESTAMP,
    PRIMARY KEY (BOARD_ID)
);

ALTER TABLE BOARD
    ADD CONSTRAINT FK_BOARD_MEMBER_ID
        FOREIGN KEY (MEMBER_ID)
            REFERENCES MEMBER (MEMBER_ID);

ALTER TABLE BOARD
    ADD CONSTRAINT FK_BOARD_PRODUCT_ID
        FOREIGN KEY (PRODUCT_ID)
            REFERENCES PRODUCT (PRODUCT_ID);

DROP TABLE IF EXISTS BOARD_IMAGE CASCADE;
CREATE TABLE BOARD_IMAGE
(
    BOARD_IMAGE_ID    BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    BOARD_ID          BIGINT UNSIGNED NOT NULL,
    UPLOAD_IMAGE_NAME VARCHAR   NOT NULL,
    STORE_IMAGE_NAME  VARCHAR   NOT NULL,
    CREATED_AT        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT       TIMESTAMP,
    PRIMARY KEY (BOARD_IMAGE_ID)
);

ALTER TABLE BOARD_IMAGE
    ADD CONSTRAINT FK_BOARD_IMAGE_BOARD_ID
        FOREIGN KEY (BOARD_ID)
            REFERENCES BOARD (BOARD_ID);


DROP TABLE IF EXISTS WISH CASCADE;
CREATE TABLE WISH
(
    WISH_ID    BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    MEMBER_ID  BIGINT UNSIGNED NOT NULL,
    PRODUCT_ID BIGINT UNSIGNED NOT NULL
);

DROP TABLE IF EXISTS CART CASCADE;
CREATE TABLE CART
(
    CART_ID    BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    MEMBER_ID  BIGINT UNSIGNED NOT NULL,
    PRODUCT_ID BIGINT UNSIGNED NOT NULL,
    COUNT      INT UNSIGNED NOT NULL
);

-- 주문
DROP TABLE IF EXISTS ORDERS CASCADE;
CREATE TABLE ORDERS
(
    ORDER_ID               BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    MEMBER_ID              BIGINT UNSIGNED NOT NULL,
    MERCHANT_UID           VARCHAR(50) NOT NULL,
    AMOUNT                 BIGINT UNSIGNED NOT NULL,
    RECIPIENT_NAME         VARCHAR(12),
    RECIPIENT_ADDRESS      VARCHAR(100),
    RECIPIENT_PHONE_NUMBER VARCHAR(13),
    DELIVERY_REQUEST_MSG   VARCHAR(255),
    ORDER_STATUS           VARCHAR(10) NOT NULL,
    FAIL_REASON            VARCHAR(255),
    ORDERED_AT             TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DELIVERED_AT           TIMESTAMP,
    PRIMARY KEY (ORDER_ID)
);

ALTER TABLE ORDERS
    ADD CONSTRAINT FK_ORDERS_MEMBER_ID
        FOREIGN KEY (MEMBER_ID)
            REFERENCES MEMBER (MEMBER_ID);

DROP TABLE IF EXISTS ORDER_PRODUCT CASCADE;
CREATE TABLE ORDER_PRODUCT
(
    ORDER_PRODUCT_ID BIGINT UNSIGNED NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    COUNT            INT NOT NULL,
    PRODUCT_ID       BIGINT UNSIGNED NOT NULL,
    ORDER_ID         BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (ORDER_PRODUCT_ID)
);

ALTER TABLE ORDER_PRODUCT
    ADD CONSTRAINT FK_ORDER_PRODUCT_PRODUCT_ID
        FOREIGN KEY (PRODUCT_ID)
            REFERENCES PRODUCT (PRODUCT_ID);

ALTER TABLE ORDER_PRODUCT
    ADD CONSTRAINT FK_ORDER_PRODUCT_ORDER_ID
        FOREIGN KEY (ORDER_ID)
            REFERENCES ORDERS (ORDER_ID);

-- 결제
DROP TABLE IF EXISTS PAYMENT CASCADE;
CREATE TABLE PAYMENT
(
    PAYMENT_ID   BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    ORDER_ID     BIGINT UNSIGNED NOT NULL,
    IMP_UID      VARCHAR(255) NOT NULL,
    MERCHANT_UID VARCHAR(255) NOT NULL,
    PG_PROVIDER  VARCHAR(255),
    PAY_METHOD   VARCHAR(255),
    AMOUNT       BIGINT UNSIGNED NULL,
    CURRENCY     VARCHAR(10)  NOT NULL,
    CARD_NAME    VARCHAR(255),
    CARD_QUOTA   BIGINT UNSIGNED,
    BUYER_EMAIL  VARCHAR(255),
    STATUS       VARCHAR(255),
    PAID_AT      TIMESTAMP,
    FAILED_AT    TIMESTAMP,
    CANCELLED_AT TIMESTAMP,
    PRIMARY KEY (PAYMENT_ID)
);

ALTER TABLE PAYMENT
    ADD CONSTRAINT FK_PAYMENT_ORDER_ID
        FOREIGN KEY (ORDER_ID)
            REFERENCES ORDERS (ORDER_ID);

DROP TABLE IF EXISTS PRODUCT_INQUIRY CASCADE;
CREATE TABLE PRODUCT_INQUIRY
(
    PRODUCT_INQUIRY_ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    MEMBER_ID          BIGINT UNSIGNED NOT NULL,
    PRODUCT_ID         BIGINT UNSIGNED NOT NULL,
    TITLE              VARCHAR(50)   NOT NULL,
    CONTENT            VARCHAR(1000) NOT NULL,
    IS_SECRET          TINYINT(1) NOT NULL,
    IS_ANSWERED        TINYINT(1) NOT NULL,
    CREATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT        TIMESTAMP     NOT NULL
);

DROP TABLE IF EXISTS ANSWER CASCADE;
CREATE TABLE ANSWER
(
    ANSWER_ID          BIGINT UNSIGNED GENERATED BY DEFAULT AS IDENTITY,
    PRODUCT_INQUIRY_ID BIGINT UNSIGNED NOT NULL,
    ADMIN_ID           BIGINT UNSIGNED NOT NULL,
    CONTENT            CLOB      NOT NULL,
    CREATED_AT         TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_AT        TIMESTAMP,
    PRIMARY KEY (ANSWER_ID)
);

ALTER TABLE ANSWER
    ADD CONSTRAINT FK_ANSWER_ADMIN_ID
        FOREIGN KEY (ADMIN_ID)
            REFERENCES ADMIN (ADMIN_ID);

ALTER TABLE ANSWER
    ADD CONSTRAINT FK_ANSWER_PRODUCT_INQUIRY_ID
        FOREIGN KEY (PRODUCT_INQUIRY_ID)
            REFERENCES PRODUCT_INQUIRY (PRODUCT_INQUIRY_ID);